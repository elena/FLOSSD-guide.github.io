VCS graph
License graph
Steals your whole source code.

zero v non-zero marginal cost
100bn per annum (Eben Moglin)

# me
- long and stupid, ask me later
- long standing interest in Open Source, it's cliched but ITBTWTCL

# COMP8440
- tons of references.
--

# Interesting Times redux
- Forbes article
- Honestly the most interesting thing about open source right now is the turning of the tide.

--

//DEFINING FLOSS

# What is Open Source, Anyway?
- this talk should always start with beer

$ #englishfail
# Gratuit v. Libre
- failing in the english language
  # beer v. folk

$ interchangable
# FLOSSD
- Free Libre Open-Source (Software Development) (inherited from Tridg)
- 1998 boardroom in Netscape, scared for free (anti-establishment), "implicitly threatening"
  agressive rebranding


//DEFINING COPYRIGHT

$ "cow it's calf"
# Copyright
- 1700s
  # automatically

%copyright

%:: fixed/creative
# fixed/creative

%:: 4 things
# 4 things
- @@ LIST FOUR
  (obvious really)

$ "so stifled"
# Interesting exceptions
-   Fashion (utilitarian)
    Comedy (not-fixed)
    Automotive (utilitarian)
    Architecture (utilitarian)
    Recipes (instructions)
    Magic (instructions/not fixed)
    Tattoos
    Rules of Games
    Perfumes


//DEFINING SOFTWARE

# What is Free Software then?

% cli
$ "In the beginning ..."
# Command line
- our art started in the 60s

%IBM
# IBM
- first proprietary Software

//BIRTH FOSS

%rms-old
%rms-young
# Stallman
- early, 1980, 1985 (FSF), 1989 (GPL)

%doge
# So fixe, such creative
- Gosh it (automatically) applies to us

%rms-dancing_dec10-1970s
- Stallman presence of mind: "Open Source"/Free
- offsetting copyright restriction

%osi_logo
# OSI
- 63,
- specifically these offset those 4

%::free v. open source
 >> so do you understand the distinction?

%gates
# M$ os code for academics
 >> if you *change* it and omgz if you change and and try to sell those changes
- lawyer drop from the sky

%::?
%tridg-derived
# Derived (where is the border of copyright)
  >> how much of windows would you have to change
  >> "big deal" outside scope of this talk
  - windows >> "random script", django app? maybe derived
  @@ TRIDG TALK

%poisonivy-octocat
%::15%/25%
$ "all the fruits in the forest are poisonous"
# very clear no licence, no go! (github)
  (all the fruits in the forest are poisonous)
  - 15% of all repositories had license files (Armin Ronacher)
  - 25% of those have the license only mentioned in the Readme file
  - if you're not sure, assume your work is derived and:
    - inherit license
    - don't use

%tenenbaum|linus
%:: Lions' Commentary on UNIX with Source Code
$ "Unix wars" >> minix, linux
On the matter of copyright and open source and operating systems
>> before linux there was a unix war where they all wanted to be "The One".

/*
# Lions' Commentary on UNIX with Source Code
  - AT&T June 1979, could not study it legally in class
  - the academic/research license  no longer automatically permitted classroom use
- Tenenbaum wrote minix
- Linus wrote Linux
  - Tenenbaum famously told him he'd fail him
  - own wiki page: Tanenbaum–Torvalds debate
*/

Software Freedom Law Centre
EFF, FSF, Software Conservancy
Creative Commons, Wikimedia
QuestionCopyright, GrokLaw


//DEFINING COPYLEFT

% >
%:: (Fun?)
  >> when you make your random script and license it

%::“Open source to open source, corporation to corporation.
    If you do open source, you’re my hero and I support you.
    If you’re a corporation, let’s talk business.”
$ http://zedshaw.com/essays/why_i_gpl.html
# "business-to-business" (Zed's GPL)
- no give back/exploitation
- If this makes you angry ...

% copyleft
$ must return changes; must stay GPL
# Copyleft
- must return changes
- must stay GPL
  >> GPL is price of admission
  >> will make big corp do boring bits
- it doesn't really matter at low level, but at scale, it'll matter

%license-graph
# Licenses graph
- Never has a little guy lost

@@ TRIDGE TALK
Questions: Abusing license for moral advantage
- devs will code around
- patches leave behind
- fork/rename
>> samba experience: every abuser has been ruined


%ohloh graph
# Python 2% (Black Duck, ohloh, @mako)
  >> no offense guys
  - ~335K/ 1% active (0.7%/0.4% high/very high)


# Summary
- why Licenses: because legally noone is allowed without
# Copyleft does what it can to save us from exploitation
- Eben Moglin: 9:1 hardware
- Bill Joy: embarrassed for us
- seriously consider proper copyleft: LGPL/Eclipse/MPL
- MPLv2 came out late 2012
- don't have to enforce, but have the option, hard to change license later

Every last major tech company is involved in the the OSI sense now.

#Why Free? Nett to zero.
 - itch to scratch: 15K, 1K, free (zero marginal cost)

Social waste transaction cost (Daniel B. Ravicher)

---

%:: autonomy, mastery and purpose
$ not money
# What we really want (it's not money)
  >> back to the idea of "# Fun
  - Actually can't stop us.
  >> autonomy, mastery and purpose

  >> # Skilling up/being the "Best"
  >> - not "during the day"
  >> - exposure
  >> - omgz the best

# Ethics
 - Aaron-Swartz-factor
 - altruism, values, "make the world a better place"
 - democracy, meritocracy
 - not cool to talk about in old-skool projects,
   >> but I think (but unvalidated) it's cool for us

//HOWTO FIND PROJECTS

%:: Where do I find projects?
% map
 >> - this question has always bothered me
 >> - cheesy kids movie: "it's inside you"

%topo1
$ what you know
# Domain Knowledge
- mountaineers, walkers, it's just different

%topo2
$ what skills you have
%topo3
$ what some random project owner's skills are


# Old version of this talk.
# Cannot independently derive this stuff: research, listen
 - do what they do, follow procedure

# Kinds of projects
- cathedral v. bizarre
- 3 types: (UC Davies)
  - Foundation
  - Community driven
  - Monarchy
- roles
- age
- communication mechanisms

# Roles: BDFL, Release Manageer

# Have a basic idea of the project before diving in

# "going to contribute to Django today" srsly.
- don't learn here, learn "there"

# Average 1 (@mako)
- vast majority projects need all the help in the world (mine included)
- very very tiny number famous project need very very high-skill specific help

- Sporting team analogy

# You might waltz straight in
- it's like farting (@fat)

18.5M pro


# 50%/50%
- MSF, EWB, Pro Bono (band, sporting team)

- what's *your* interest
- what's *your* strength
- what skill do *you* currently want to work on
- what problem to *you* want to solve
- what do you find satisfying to do in your spare time
- weird form of teamwork

# Change your brain: learn to look

(Never taught at uni: ) @tef
most tiem: documenting, maintaining , fixing, testing, *reading* code
Constructive Procrastination
 > students

Code Review (learning)
HTML
Translations
Django users
"Meeting a personal need"


# YOU ARE AT A CONFERENCE NOW!
- people you know
- sprints
- things you use
- within your domain
( >> post "that question bothers me rant)

- Find tools your friends are using (best support!)
- Use things that are easy to install (be kind to yourself, this day and age no need to suffer, do messed-up stuff later)


Fun, compelling, interesting and challenging and we want to do it anyway.

Fun, chaotic, anarchic, opinionated >> FUN
Serendipidy: don't know where FLOSS will go
Zero marginal cost.
If we're clever and we work together we can attain what is probably the highest attainment in human history. Freedom.
Could be hyperbole but they say the "c

-

//HOWTO CONTRIBUTE

# VCS (nowadays git)

#DVCS wars

# 3rd great era, it may change again
- sourceforge and github
- bear in mind git is a bit arse to use still, 2st great DVCS

# Start small
- take nothing else away
- Linus Stallman von Neuman
- drive by shootings, gotta know you, trust you

# Find out how/who communicate

# Find out how to commit

"STYLE"
Learn the “style” of the existing project. Phrasing, structure, etc.
There will probably be rules. Follow them. eg: PEP8
If in doubt: copy
Don’t make up a new style, you’ll look like a fool -- ASK!

# Expect to get rejected
# Most patches aren't good enough
- massive mistake, giving it away for free
 >> stable working > ego (sorry.) (Jeremy Rusten)

That's why concept of "core" exists
- ecosystem around
- build up ranks
- make plugins

Serious, dedicated, committed professional people

# whose time is precious
- committers are a very limited resource


Punch your weight
Play your strength
(confident, easy: dinner parties/marathons)
Realistic expectations
Every project needs: designers, content makers, writers

# The world needs more technical lawyers!
- sincerely Eben Moglin, Karen Sandler

# The world needs more designers
- fight the "programming since 8" phenomenon


# Different things matter to different people
- In professional environment this sucks, in open source this is magic

# Don't think people will have the same motive as you (Tridg)
- people without a good ethical sense are in FOSS too




"Parkinson's Law of Triviality" -- bikeshedding
1957 argument that organizations give disproportionate weight to trivial issues
- wary of logos/colours
- beware of projects with a logo and no code
- no domain experience/knowledge

Start project:
 - Daniel/Kenneth/Jessica/Daniele
 - pull request zero
 - firefighter/anti-bikeshedder

# takes work to get work done
# Have a non-code person who answers pull requests
# Automate all the things

# Recognition!
  >> one of the main motivations


# Let go
- write down everything need to do
- highlight everything you love
- give everything else away

Phrase your problem in a way that's easily accessible to person w/ right skills
 >> offer recognition

# Be Cordial
 - sleeper in your ranks
 - participation is function of social participation
 >> research shows length of time 

# Embrace your churn (people will hang around months/years)

# Puppy

# Same people! different pies
- common in community
- be respectful!

People tend not to answer the question they're asked (Jeremy Rusten)
 >> finding requirements is hard (deep understanding)
 - get other people to do this


//GENERAL

# Flexible
- (Not top 1%), but rest FOSS is really flexible.
  Young projects can turn on a dime for your idea.
  Envisioning and implementing all the fine details is expensive for new projects.

# Tools
- VCS (nowadays git)

Notice Itch
find code
eyeball community
fork
clone
grep (or code, etc)
commit, push (to your version)
pull request
(comment/email)

//TAKE FOR GRANTED

# Tools
- Mailing-lists/IRC (not as obvious as it seems)
- Learn to use: Issue tracker
  "Design decision needed"/"close"v."feedback" fields should and shouldn’t use

(spend ... time ... studying these things)
(a very large number of us a self-taught from other fields)

# Tools
- Text Editor
  (pick a good one, learn to use it well)
- Source Control Management (SCM)
  (eg: git)

# Tools
- Learn to use: Command Line (CLI)
  wildcarding, piping, here documents, command substitution, variables and control structures for condition-testing and iteration
- grep (or ack) and find
- Regular Expressions (aka: regex)

(these take YEARS to learn!)
(these are our basic skills, we spend most of the time with them)

# Tools
- WRITE (clearly)
- Popular markups: ReST Markdown


//PARTICIPATION

# SAYING: I DON’T KNOW
- On feeling stupid: Everyone does. Everyone is about most things.
  The “best” leverage this to their advantage (usually very humble.)
  Harry Kroto, HE ... was

# ASK/LISTEN Rule of Thumb: (@pydanny)
- stuck for 1⁄2 hour.
- Go to: IRC, mailing-list
- Don’t agonise, spare yourself the pain!
  Often:
  ~ experienced people can see/feel you struggling (but seldom say anything)
  ~ so, in short term you feel like gumby BUT: learn something, might actually look clever ~ in medium term: your corpus is building faster

# terse təәrs/ adjective
ASK/EXPLAIN State as simply as possible. State it up front.
Time is precious: be terse
1. sparing in the use of words; abrupt. "a terse statement"
synonyms: brief, short, to the point, concise, succinct, crisp, pithy, incisive,
No fluffy language, no big explanation. BE CORDIAL but just get to the core of it.

# Don't be douche about other people's FOSS technical solutions currently working
- spreadsheets

# Turn up
- Decisions are made by the people who turn up.
- Hackerspaces User Groups Conferences
  Congratulations you are already here. Connect and develop.

# SET PEOPLE'S EXPECTATIONS
Probably the most valuable thing I’ve learnt in the last 5 years.
 - TELL PEOPLE WHAT YOU’RE DOING
   - For their sake.
   - Save them from wondering.
 - DO WHAT YOU SAY YOU’RE GOING TO DO (18%)
   - But, if you can’t communicate!
   - FOSS people are spectacularly understanding.

"Start where you are, Use what you've got, Do what you can"
- Skud

# Don’t get disheartened.
- All mistakes will eventually be washed clean by time and entropy.
- Communities are very robust.

---

22.5 minute alarm:
# Question: SOMEONE WHO HASN'T CONTRIBUTED BUT WANTS TO
- What do you *want* to give to a project (create/do/build)
- What do you feel is stopping you?
- If you don't, but want to, why?


Fin:

# Interesting times
- Tech is becoming mainstream: Culture is changing
- Stream-lined ability to contribute/communicate.
- Re-learning old lessons.
- Demographic imbalance: Not just chicks, it’s older, multicultural.

# CHANGING DEMOGRAPHICS
Difference is a continuum. Shared culture and technical knowledge. Skills!

People currently going in to CS (2013 USA highschool cs placement)
Still a white-boy sport
50|18 (female)
22|08 (hispanic)
14|04 (black)
- All the Einsteins and Mozarts (hidden genius factor)
- POTENTIAL
- shy, nerdy, curious little girl(/boy) who were elbowed out of the way all their lives
  >> don't want all
- Continuum (skatepark)

- Copyright: Post-GPLv3 world
- Patents: revolution is coming


# Interesting times fin
- "Software"
- mainstreaming

- expropriation of "open source"
  farms, cars, localised economies

- Technical participation is changing

- There will always be some form of “Open Source”.
- People like us will make it happen.
- FLOSS will probably change the world (probably already has)
- FLOSS may play a pivotal role in saving the world (from ourselves)
- Disconnection between people and digital technology (shouldn't be, not insurmountable problem)x

---



---
@daniellindsley
@kennethreitz

@makoshark
@zedshaw
Bradley Kuhn

@tef
@fat
Kyle Conroy
Jeremy Rusten
